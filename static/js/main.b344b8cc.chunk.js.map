{"version":3,"sources":["components/Section/StyledComponents.js","components/Section/Section.jsx","components/FeedbackOptions/StyledComponents.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/StyledComponents.js","components/Statistics/Statistics.jsx","components/Notification/StyledComponents.js","components/Notification/Notification.jsx","components/App.js","index.js"],"names":["PageSection","styled","section","SectionTitle","h2","Section","title","children","OptionsBlock","div","Button","button","props","BgColor","FeedbackOptions","onLeaveFeedback","type","onClick","StatisticsBlock","ul","StatisticsItem","li","Statistics","good","neutral","bad","total","positivePercentage","NotificationTitle","h3","Notification","App","state","handlerFeedbackButton","setState","prevState","Object","values","this","reduce","acc","elem","Math","round","countTotalFeedback","percentage","countPositiveFeedbackPercentage","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gsBAEA,IAAMA,EAAcC,IAAOC,QAAV,KAUXC,EAAeF,IAAOG,GAAV,KCPH,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,eAACP,EAAD,WACI,cAACG,EAAD,UAAeG,IACdC,K,sgBCPb,IAAMC,EAAeP,IAAOQ,IAAV,KAQZC,EAAST,IAAOU,OAAV,KAGO,SAAAC,GAAK,OAAIA,EAAMC,WCRnB,SAASC,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACtC,OACI,eAACP,EAAD,WACI,cAACE,EAAD,CAAQM,KAAK,SAASC,QAAS,kBAAMF,EAAgB,SAASF,QAAS,QAAvE,kBACA,cAACH,EAAD,CAAQM,KAAK,SAASC,QAAS,kBAAMF,EAAgB,YAAYF,QAAS,SAA1E,qBACA,cAACH,EAAD,CAAQM,KAAK,SAASC,QAAS,kBAAMF,EAAgB,QAAQF,QAAS,MAAtE,oB,kWCRZ,IAAMK,EAAkBjB,IAAOkB,GAAV,KAMfC,EAAiBnB,IAAOoB,GAAV,KCJL,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC5D,OACI,eAACT,EAAD,WACI,eAACE,EAAD,oBAAuBG,KACvB,eAACH,EAAD,uBAA0BI,KAC1B,eAACJ,EAAD,mBAAsBK,KACtB,eAACL,EAAD,qBAAwBM,KACxB,eAACN,EAAD,iCAAoCO,EAApC,U,oLCTZ,IAAMC,EAAoB3B,IAAO4B,GAAV,KCIR,SAASC,EAAT,GAAkC,IAAVxB,EAAS,EAATA,MACnC,OACI,mCACI,cAACsB,EAAD,UAAoBtB,M,ICFXyB,E,4MAKnBC,MAAQ,CACFT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGXQ,sBAAwB,SAAAjB,GAClB,EAAKkB,UAAS,SAACC,GACX,OAAO,eACFnB,EAAOmB,EAAUnB,GAAQ,O,mEAMlC,OAAOoB,OAAOC,OAAOC,KAAKN,OAAOO,QAAO,SAACC,EAAKC,GAC1C,OAAOD,EAAOC,IACf,K,sDAGuBf,EAAOH,GACrC,OAAOmB,KAAKC,MAAc,IAAPpB,EAAcG,K,+BAIzB,IAAD,EACwBY,KAAKN,MAA5BT,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQY,KAAKM,qBACTC,EAAaP,KAAKQ,gCAAgCpB,EAAOH,GACnE,OACE,qCACE,cAAClB,EAAD,CAASC,MAAM,0BACf,cAACQ,EAAD,CAAiBC,gBAAiBuB,KAAKL,wBACrC,cAAC5B,EAAD,CAASC,MAAM,aAAf,SACWoB,EAAQ,EACL,cAACJ,EAAD,CACIC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBkB,IAGpB,cAACf,EAAD,CAAcxB,MAAM,+B,GAhDfyC,aAAZhB,EAGZiB,aAAe,GCLxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b344b8cc.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst PageSection = styled.section`\r\npadding-top:25px;\r\npadding-bottom:25px;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\njustify-content:center;\r\nmax-width:600px;\r\nmargin: 0 auto;\r\nborder: solid 1px blue;\r\n`\r\nconst SectionTitle = styled.h2`\r\nwidth:100%;\r\ntext-align:center;\r\nfont-size:2rem;\r\nfont-weight:600;\r\ncolor: brown;\r\ntext-transform:uppercase;\r\nmargin-bottom:30px;\r\n`\r\nexport { PageSection, SectionTitle }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { PageSection, SectionTitle } from './StyledComponents';\r\n\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <PageSection>\r\n            <SectionTitle>{title}</SectionTitle>\r\n            {children}\r\n        </PageSection>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string\r\n};","import styled from 'styled-components'\r\n\r\nconst OptionsBlock = styled.div`\r\npadding-top: 25px;\r\npadding-bottom:25px;\r\ndisplay:flex;\r\njustify-content:center;\r\nwidth:80%;\r\nmargin:0 auto;\r\n`\r\nconst Button = styled.button`\r\nheight:30px;\r\npadding:10px 20px;\r\nbackground-color:${props => props.BgColor};\r\nborder:none;\r\nborder-radius:0.3rem;\r\nfont-size:0.8rem;\r\ncolor: black;\r\ntext-transform:uppercase;\r\ncursor:pointer;\r\n:not(:last-child) {\r\n    margin-right: 10px;\r\n}\r\n\r\n:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`\r\nexport { OptionsBlock, Button }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { OptionsBlock, Button } from './StyledComponents';\r\n\r\n\r\nexport default function FeedbackOptions({ onLeaveFeedback }) {\r\n    return (\r\n        <OptionsBlock>\r\n            <Button type='button' onClick={() => onLeaveFeedback('good')} BgColor={'green'}>Good</Button>\r\n            <Button type='button' onClick={() => onLeaveFeedback('neutral')} BgColor={'yellow'}>Neutral</Button>\r\n            <Button type='button' onClick={() => onLeaveFeedback('bad')} BgColor={'red'}>Bad</Button>\r\n        </OptionsBlock>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n};","import styled from 'styled-components'\r\n\r\nconst StatisticsBlock = styled.ul`\r\nwidth:80%;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\nmargin:0 auto;\r\n`\r\nconst StatisticsItem = styled.li`\r\nwidth:100%;\r\ntext-align:center;\r\nfont-size:1.2rem;\r\ncolor:black;\r\nlist-style: none;\r\nfont-weight:500;\r\n&:not(:last-child){\r\n    margin-bottom:15px;\r\n}\r\n`\r\nexport { StatisticsBlock, StatisticsItem }","import React from 'react'\r\nimport { StatisticsBlock, StatisticsItem } from './StyledComponents'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n    return (\r\n        <StatisticsBlock>\r\n            <StatisticsItem>Good: {good}</StatisticsItem>\r\n            <StatisticsItem>Neutral: {neutral}</StatisticsItem>\r\n            <StatisticsItem>Bad: {bad}</StatisticsItem>\r\n            <StatisticsItem>Total: {total}</StatisticsItem>\r\n            <StatisticsItem>Positive feedback: {positivePercentage}&#37;</StatisticsItem>\r\n        </StatisticsBlock>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n};","import styled from 'styled-components'\r\n\r\nconst NotificationTitle = styled.h3`\r\nwidth:100%;\r\ntext-align:center;\r\nfont-size:1rem;\r\nfont-weight:600;\r\ncolor: gray;\r\ntext-transform:uppercase;\r\n`\r\n\r\nexport { NotificationTitle }","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { NotificationTitle } from './StyledComponents';\r\n\r\n\r\n\r\nexport default function Notification({ title }) {\r\n    return (\r\n        <>\r\n            <NotificationTitle>{title}</NotificationTitle>\r\n        </>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    title: PropTypes.string\r\n};","import React, { Component } from 'react';\r\nimport Section from './Section';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Statistics from './Statistics';\r\nimport Notification from './Notification/'\r\n\r\n\r\nexport default class App extends Component {\r\n  static propTypes = {};\r\n\r\n  static defaultProps = {};\r\n\r\n  state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n  }\r\n\r\n  handlerFeedbackButton = type => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                [type]: prevState[type] + 1\r\n            }\r\n        })\r\n  };\r\n\r\n  countTotalFeedback() {\r\n        return Object.values(this.state).reduce((acc, elem) => {\r\n            return acc += elem\r\n        }, 0)\r\n    }\r\n  \r\n  countPositiveFeedbackPercentage(total, good) {\r\n    return Math.round((good * 100) / total)\r\n    }\r\n\r\n  \r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n        const percentage = this.countPositiveFeedbackPercentage(total, good);\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\"></Section>\r\n        <FeedbackOptions onLeaveFeedback={this.handlerFeedbackButton} />\r\n          <Section title=\"Statistics\">\r\n                    {total > 0 ? (\r\n                        <Statistics\r\n                            good={good}\r\n                            neutral={neutral}\r\n                            bad={bad}\r\n                            total={total}\r\n                            positivePercentage={percentage}\r\n                        />\r\n                    ) : (\r\n                            <Notification title=\"No feedback given\" />\r\n                        )}\r\n                </Section>\r\n      </>\r\n    )\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}